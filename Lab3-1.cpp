
// Lab3.cpp – Листинг программы для Задания №1, 3-й лабораторной работы
// Вариант 8
//*******************************************************************************
// Имя файла : Lab3.cpp
// Резюме : Пример программы написанной на языке программирования С++
// Описание :  
// Программа вычисляет значения функции Y(x) на отрезке [-2, 2] с шагом 0.01
// Инициализирует элементы массива значениями x, y
// Выводит на консоль и записывает в файл:
// - сформированный массив в формате: "i : X[i] : Y[i] : &X[i] : &Y[i]";
// - наименьшее значение Y(x) по сформированным данным;
// - наибольшее значение Y(x) по сформированным данным;
// Дата создания : 2022 / 01 / 22
// Автор : Студент НГТУ ИРИТ, Халеев А.А., гр. 21-ИВТз
// Платформа : OS Microsoft Windows, MS Visual Studio 2019 (Community)
// ******************************************************************************

/* Подключение модулей */
#include <stdio.h>
#include <locale.h>
#include <cmath>

/* Инициализация констант, соответствующих количеству строк и столбцов будущего массива,
* максимальному количеству символов в буферной строке*/
const int YXROW = 41;
const int YXCOL = 4;
const int STRLEN = 2782;

/* Объявление прототипов будущих функций*/
void InitYXTable(double[][YXCOL], int); //инициализация таблицы значений Y(x)
void YXTableToBuffer(char[], int, double[][YXCOL], int); // добавление в строку-буфер таблицы значений Y(x)
double YXMin(double[][YXCOL], int); //поиск минимального значения Y(x) в таблице
double YXMax(double[][YXCOL], int); //поиск максимального значения Y(x) в таблице
void PrintBufferToFile(char[]); // вывод содержимого строки-буфера в файл

/* Начало главной функции */
int main() {

	setlocale(LC_ALL, "RUS"); // Вызов функции для отображения русских символов

	/* Логотип программы */
	const  char* logo = "*********************************************************\n\
* Нижегородский государственный технический университет *\n\
* Лабораторная работа №5. Задание 1. Вариант 8.         *\n\
* Выполнил студент группы 21 - ИВТз Халеев Алексей      *\n\
*********************************************************\n\n";
	char buffer[STRLEN]; // Объявление строки-буфера для вывода на консоль и в файл согласно условия задачи
	double YXTable[YXROW][YXCOL]; // Объявление двумерного массива для хранения значений x и Y(x)
	snprintf(buffer, STRLEN, logo); // Добавление в строку-буфер логотипа лабораторной работы
	InitYXTable(YXTable, YXROW); // инициализация таблицы значениями x и Y(x)
	YXTableToBuffer(buffer, STRLEN, YXTable, YXROW); // добавление в строку-буфер таблицы согласно условия задачи

	/* Добваление в строку-буфер информации о минимальном и максимальном значениях Y(x) на заданном отрезке*/
	snprintf(buffer, STRLEN, "%s\nМинимальное значение Y(x) на отрезке [-2, 2]: %lf", buffer, YXMin(YXTable, YXROW));
	snprintf(buffer, STRLEN, "%s\nМаксимальное значение Y(x) на отрезке [-2, 2]: %lf\n", buffer, YXMax(YXTable, YXROW));

	printf(buffer); // Вывод на консоль
	PrintBufferToFile(buffer); // Вывод в файл
	system("pause"); // Команда задержки экрана
	return 0; //  Возврат управления ОС в случае успешной работы
} //  END: Конец кода главной функции модуля

void InitYXTable(double Arr[][YXCOL], int rows) {
	// Цель: Инициализация двумерного массива значениями x и Y(x)
	// Исходные данные:
	//		Arr – указатель на инициализируемый двумерный массив
	//		rows - количество строк в массиве
	//		х принимает значения от -2 до 2 с шагом 0.1
	//		Y(x) вычисляется согласно условия задачи
	// Результат: Массив инициализирован соответствующими значениями x и Y(x)
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная x типа double и инициализируется начальным значением
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i
	* 3) В нулевой столбец записывается текущее значение х
	* 4) В первый столбец записывается результат вычисления значения Y(x)
	* 5) Текущее значение x увеличивается на размер шага согласно условия задачи*/
	// Дата: 2022 / 01 / 22 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double x{ -2 }; // инициализация начального значения х
	for (int i = 0; i < rows; i++) {
		Arr[i][0] = x; // запись текущего значения х в соответствующий столбец
		/* запись результата вычисления Y(x) в соответствующий столбец*/
		if ((x - pow(x, 3)) >= 0) {
			Arr[i][1] = sqrt(x - pow(x, 3));
		}
		else Arr[i][1] = -1;
		x += (0.1 - 0.0000000000000001); // увеличение значения х на величину шага согласно условия задачи
		// при увеличении переменной х на величину шага используется поправочный коэффициент
		// такой прием позволяет избежать неточности вычислений для граничных значений Y, возникающих
		// вследствие двойных преобразований систем счисления при использовании чисел с плавающей точкой
	}
}
void YXTableToBuffer(char buf[], int lenbuf, double Arr[][YXCOL], int rows) {
	// Цель: Дополнение строки-буфера таблицей значений х и Y(x)
	// Исходные данные:
	//		buf - целевая строка-буфер
	//		lenbuf - максимальное количество символов в целевой строке-буфере
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Исходная строка-буфер дополнена таблицей значений x и Y(x)
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) С помощью форматного вывода snprintf() в строку-буфер добавляется заголовок таблицы
	* 2) Выполняется проход по строкам двумерного массива Arr с помощью временной переменной i
	* 3) С помощью форматного вывода snprintf() строка-буфер дополняется порядковым номером в таблице,
	* значением Y(x), значением x, адресом указателя на Y(x) и адресом указателя на х, содержащимися
	* в двумерном массиве Arr. */
	// Дата: 2022 / 01 / 22 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/

	// Добавление заголовка таблицы в буфер
	snprintf(buf, lenbuf, "%s|%2c| %18c | %4c| %7c%c | %7c%c |\n%s\n", buf, '№', 'Y', 'X', '&', 'X', '&', 'Y', \
		"-----------------------------------------------------");
	// заполнение таблицы
	for (int i = 0; i < rows; i++) {
		if (Arr[i][1] != -1.) {
			snprintf(buf, lenbuf,"%s|%2d| %18lf | %4.1lf| %p | %p |\n",\
				buf, i + 1, Arr[i][1], Arr[i][0], &Arr[i][1], &Arr[i][0]);
		}
		else {
			snprintf(buf, lenbuf, "%s|%2d| %s | %4.1lf| %p | %p |\n",\
				buf, i + 1, "Y(X) не определено", Arr[i][0], &Arr[i][1], &Arr[i][0]);
		}
	}
}

void PrintBufferToFile(char buf[]) {
	// Цель: Вывод содержимого строки-буфера в файл
	// Исходные данные:
	//		buf - целевая строка-буфер
	// Результат: Содержимое строки-буфера выведено в файл
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется указатель "data" на целевой файл и инициализируется значением NULL
	* 2) Выполняется открытие/создание файла, с проверкой успешного выполнения операции
	* 3) Выполняется проверка не равенство нулю указателя "data"
	* 4) Выполняется вывод содержимого строки-буфера в целевой файл с помощью инструкции "fprintf()"
	* 5) Выполняется выполняется закрытие файла, с проверкой успешного выполнения операции
	// Дата: 2022 / 01 / 22 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	FILE* data = NULL;
	if (fopen_s(&data, "Lab3.txt", "w") != 0) {//код ошибки не равен 0
		printf("Ошибка открытия файла!\n");
		system("pause");
	}
	if (data != 0) {
		fprintf(data, buf);
		if (fclose(data) != 0) {
			printf("Ошибка закрытия файла\n");
		}
	}
}

double YXMin(double Arr[][YXCOL], int rows) {
	// Цель: Поиск минимального значения Y(x) в таблице
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Функция возвращает минимальное значение Y(x) в таблице
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная min типа double и инициализируется первым значением Y(x)
	в таблице
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i,
	* которая принимает значения от 1 до rows - 1, т.к. значение нулевой строки уже сохранено
	в переменной min;
	* 3) Для каждой итерации сравнивается значение переменной min и соответствующее строке
	значение Y(x). Если значение Y(x) меньше, оно присваивается переменной min;
	* 4) По завершению цикла функция возвращает значение переменной min типа double,
	* которое и является минимальным значением Y(x) в таблице
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double min = Arr[0][1]; // объявляется переменная min типа double и инициализируется первым
	// значением Y(x) в таблице
	for (int i = 1; i < rows; i++) {
		if (Arr[i][1] < min && Arr[i][1] >= 0) min = Arr[i][1]; // обновление переменной min, в случае обнаружения
		// меньшего значения
	}
	return min; // возврат наименьшего значения Y(x) в таблице
}
double YXMax(double Arr[][YXCOL], int rows) {
	// Цель: Поиск максимального значения Y(x) в таблице
	// Исходные данные:
	//		Arr – указатель на двумерный массив, содержащий соответствующие значения таблицы
	//		rows - количество строк в массиве
	// Результат: Функция возвращает максимальное значение Y(x) в таблице
	// Вызываемые модули: нет
	/* Описание алгоритма :
	* 1) Объявляется переменная max типа double и инициализируется первым значением Y(x)
	в таблице
	* 2) Выполняется проход по строкам двумерного массива с помощью временной переменной i,
	* которая принимает значения от 1 до rows - 1, т.к. значение нулевой строки уже сохранено
	в переменной max;
	* 3) Для каждой итерации сравнивается значение переменной max и соответствующее строке
	значение Y(x). Если значение Y(x) больше, оно присваивается переменной max;
	* 4) По завершению цикла функция возвращает значение переменной max типа double,
	* которое и является максимальным значением Y(x) в таблице
	// Дата: 2022 / 01 / 17 Версия 1.01
	// Автор: Студент НГТУ ИРИТ, Халеев А. А. гр. 21-ИВТз
	// Исправления: нет
	/**************************************************************************************/
	double max = Arr[0][1]; // объявляется переменная max типа double и инициализируется первым
	// значением Y(x) в таблице
	for (int i = 1; i < rows; i++) {
		if (Arr[i][1] > max) max = Arr[i][1];// обновление переменной max, в случае обнаружения
		// максимального значения
	}
	return max; // возврат наибольшего значения Y(x) в таблице
}
